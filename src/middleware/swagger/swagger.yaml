openapi: 3.0.0
info:
  title: REST API for Users and Posts Database
  version: 1.0
paths:
  /auth/payload:
    get:
      summary: Get a user payload
      tags:
        - auth
      security:
        - BearerAuth: []
      responses:
        '200':
          description: User details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '204':
          description: User is not authorized
  /auth/signin:
    post:
      summary: Login to account
      tags:
        - auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IUserAuth'
            examples:
              Example The Only One Possible Properties In The Request Body:
                value:
                  email: 'voyagerbvb@gmail.com'
                  password: 'hjgjHDJJh134!?'
      responses:
        '200':
          description: Authorization was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized - incorrect email or password
        '400':
          description: Bad request
        '403':
          descripton: Forbidden - user account is not activated
        '422':
          description: Unprocessable entity
        '500':
          description: Internal server error
  /auth/signup:
    post:
      summary: Register a user
      tags:
        - auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IUserRegister'
            examples:
              Example Maximum Possible Properties In The Request Body Without Null:
                value:
                  name: 'bogdan_10'
                  role: 'user'
                  email: 'voyagerbvb@gmail.com'
                  password: 'hjgjHDJJh134!?'
                  contacts:
                    - type: 'telegram'
                      value: '@zira839'
                    - type: 'phone'
                      value: '+7 982 408 31 75'
              Example Maximum Possible Properties In The Request Body With Null:
                value:
                  name: 'bogdan_10'
                  role: 'user'
                  email: 'voyagerbvb@gmail.com'
                  password: 'hjgjHDJJh134!?'
                  contacts: null
              Example Minimum Possible Properties In The Request Body:
                value:
                  name: 'bogdan_10'
                  role: 'admin'
                  email: 'voyagerbvb@gmail.com'
                  password: 'hjgjHDJJh134!?'
      responses:
        '200':
          description: Email successfully sent to the user's email
        '400':
          description: Bad request
        '422':
          description: Unprocessable entity
        '500':
          description: Internal server error
  /auth/logout:
    get:
      summary: Logout of account
      tags:
        - auth
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Logout was successfully
        '401':
          description: Unauthorized - you must sign in
        '400':
          description: Bad request
        '500':
          description: Internal server error
  /api/users:
    patch:
      summary: Update a user
      tags:
        - users
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IUserPublicUpdate'
            examples:
              Example The Only One Possible Properties In The Request Body:
                value:
                  name: 'bogdan_super'
                  email: 'awesom-e4000@mail.ru'
                  newPassword: 'bjgjfIjdjf134!?'
                  oldPassword: 'ngjJFK9849??!'
      responses:
        '200':
          description: User successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad request
        '401':
          description: Unauthorized - you must sign in
        '404':
          description: User is not found
        '422':
          description: Unprocessable entity
        '500':
          description: Internal server error
  /api/users/admin:
    get:
      summary: Get all users (For admins)
      tags:
        - users
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: search
          schema:
            type: string
            default: ''
          required: false
          description: Search string that matches user names or emails
      responses:
        '200':
          description: List of all users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad request
        '401':
          description: Unauthorized - you must sign in as admin
        '404':
          description: Users are not found
        '422':
          description: Unprocessable entity
        '500':
          description: Internal server error
  /api/users/admin/{userId}:
    get:
      summary: Get a user by id (For admins)
      tags:
        - users
      security:
        - BearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: |
            User ID. Example: `223d526d-5064-455e-9daf-6e7e3ad3e77d`
      responses:
        '200':
          description: User details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad request
        '401':
          description: Unauthorized - you must sign in as admin
        '403':
          descripton: Forbidden - this user account is not activated
        '404':
          description: User is not found
        '422':
          description: Unprocessable entity
        '500':
          description: Internal server error
    patch:
      summary: Update a user by id (For admins)
      tags:
        - users
      security:
        - BearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: |
            User ID. Example: `223d526d-5064-455e-9daf-6e7e3ad3e77d`
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IUserPrivateUpdate'
            examples:
              Example The Only One Possible Properties In The Request Body (All Properties Are Optional):
                value:
                  name: 'bogdan_10'
                  role: 'user'
                  email: 'voyagerbvb@gmail.com'
                  password: 'jhggjHJDgg78594?'
                  rating: 10
      responses:
        '200':
          description: User successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad request
        '401':
          description: Unauthorized - you must sign in as admin
        '404':
          description: User is not found
        '422':
          description: Unprocessable entity
        '500':
          description: Internal server error
    delete:
      summary: Delete a user by id (For admins)
      tags:
        - users
      security:
        - BearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: |
            User ID. Example: `223d526d-5064-455e-9daf-6e7e3ad3e77d`
      responses:
        '200':
          description: User successfully deleted
        '400':
          description: Bad request
        '401':
          description: Unauthorized - you must sign in as admin
        '404':
          description: User is not found
        '422':
          description: Unprocessable entity
        '500':
          description: Internal server error
  /api/users/contacts/public:
    get:
      summary: Get all user contacts
      tags:
        - users contacts
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: search
          schema:
            type: string
            default: ''
          required: false
          description: Search string that matches user contact type or value
      responses:
        '200':
          description: List of all user contacts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserContact'
        '400':
          description: Bad request
        '401':
          description: Unauthorized - you must sign in
        '404':
          description: User contacts are not found
        '422':
          description: Unprocessable entity
        '500':
          description: Internal server error
    post:
      summary: Create a new user contact
      tags:
        - users contacts
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IUserContact'
            examples:
              Example The Only One Possible Properties In The Request Body:
                value:
                  type: 'phone'
                  value: '+7 982 408 31 75'
      responses:
        '201':
          description: User contact successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserContact'
        '400':
          description: Bad request
        '401':
          description: Unauthorized - you must sign in
        '422':
          description: Unprocessable entity
        '500':
          description: Internal server error
  /api/users/contacts/public/{userContactId}:
    get:
      summary: Get a user contact by id
      tags:
        - users contacts
      security:
        - BearerAuth: []
      parameters:
        - name: userContactId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: |
            User Contact ID. Example: `93243b0e-6fbf-4a68-a6c1-6da4b4e3c3e4`
      responses:
        '200':
          description: User contact details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserContact'
        '400':
          description: Bad request
        '401':
          description: Unauthorized - you must sign in
        '404':
          description: User contact is not found
        '422':
          description: Unprocessable entity
        '500':
          description: Internal server error
    patch:
      summary: Update a user contact by id
      tags:
        - users contacts
      security:
        - BearerAuth: []
      parameters:
        - name: userContactId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: |
            User Contact ID. Example: `93243b0e-6fbf-4a68-a6c1-6da4b4e3c3e4`
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IUserContact'
            examples:
              Example The Only One Possible Properties In The Request Body:
                value:
                  type: 'telegram'
                  value: '@zira839'
      responses:
        '200':
          description: User contact successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserContact'
        '400':
          description: Bad request
        '401':
          description: Unauthorized - you must sign in
        '404':
          description: User contact is not found
        '422':
          description: Unprocessable entity
        '500':
          description: Internal server error
    delete:
      summary: Delete a user contact by id
      tags:
        - users contacts
      security:
        - BearerAuth: []
      parameters:
        - name: userContactId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: |
            User Contact ID. Example: `93243b0e-6fbf-4a68-a6c1-6da4b4e3c3e4`
      responses:
        '200':
          description: User contact successfully deleted
        '400':
          description: Bad request
        '401':
          description: Unauthorized - you must sign in
        '404':
          description: User contact is not found
        '422':
          description: Unprocessable entity
        '500':
          description: Internal server error
  /api/posts/public:
    get:
      summary: Get all user posts
      tags:
        - posts
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: filters
          schema:
            type: object
            properties:
              title || content:
                type: object
                properties:
                  phraseSearch || wordSearch:
                    type: string
          required: false
          description: Object that defines filters for searching among titles or contents
          style: deepObject
      responses:
        '200':
          description: List of all user posts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '400':
          description: Bad request
        '401':
          description: Unauthorized - you must sign in
        '404':
          description: Posts are not found
        '422':
          description: Unprocessable entity
        '500':
          description: Internal server error
    post:
      summary: Create a new post
      tags:
        - posts
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IPostCreate'
            examples:
              Example Maximum Possible Properties In The Request Body Without Null:
                value:
                  title: 'Властелин колец - книги против фильмов'
                  access: 'public'
                  content: 'Я прочитал все книги, а также посмотрел все фильмы про Властелин Колец...'
                  tags:
                    - 'фильмы'
                    - 'книги'
                    - 'Властелин Колец'
              Example Maximum Possible Properties In The Request Body With Null:
                value:
                  title: 'Властелин колец - книги против фильмов'
                  access: 'public'
                  content: 'Я прочитал все книги, а также посмотрел все фильмы про Властелин Колец...'
                  tags: null
              Example Minimum Possible Properties In The Request Body:
                value:
                  title: 'Властелин колец - книги против фильмов'
                  access: 'private'
                  content: 'Я прочитал все книги, а также посмотрел все фильмы про Властелин Колец...'
      responses:
        '201':
          description: Post successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '400':
          description: Bad request
        '401':
          description: Unauthorized - you must sign in
        '422':
          description: Unprocessable entity
        '500':
          description: Internal server error
  /api/posts/public/{postId}:
    get:
      summary: Get a post by id
      tags:
        - posts
      security:
        - BearerAuth: []
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: string
          description: |
            Post Id. Example: `550e8400-e29b-41d4-a716-446655440000`
      responses:
        '200':
          description: Post details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '400':
          description: Bad request
        '401':
          description: Unauthorized - you must sign in
        '404':
          description: Post is not found
        '422':
          description: Unprocessable entity
        '500':
          description: Internal server error
    patch:
      summary: Update a post by id
      tags:
        - posts
      security:
        - BearerAuth: []
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: string
          description: |
            Post Id. Example: `550e8400-e29b-41d4-a716-446655440000`
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IPostUpdate'
            examples:
              Example The Only One Possible Properties In The Request Body (All Properties Are Optional):
                value:
                  title: 'Властелин колец - книги против фильмов'
                  access: 'public'
                  content: 'Как-то в детстве я посмотрел фильм...'
                  tags:
                    - 'фильмы'
                    - 'книги'
                    - 'Властелин Колец'
      responses:
        '200':
          description: Post successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '400':
          description: Bad request
        '401':
          description: Unauthorized - you must sign in
        '404':
          description: Post is not found
        '422':
          description: Unprocessable entity
        '500':
          description: Internal server error
    delete:
      summary: Delete a post by id
      tags:
        - posts
      security:
        - BearerAuth: []
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: string
          description: |
            Post Id. Example: `550e8400-e29b-41d4-a716-446655440000`
      responses:
        '200':
          description: Post successfully deleted
        '400':
          description: Bad request
        '401':
          description: Unauthorized - you must sign in
        '404':
          description: Post is not found
        '422':
          description: Unprocessable entity
        '500':
          description: Internal server error
  /api/subscriptions/public:
    post:
      summary: Create a new subscription as subscriber
      tags:
        - subscriptions
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ISubscriptionCreate'
            examples:
              Example Maximum Possible Properties In The Request Body Without Null:
                value:
                  type: 'max+'
                  period: '2026-01-01'
                  userName: 'bogdan_10'
              Example Maximum Possible Properties In The Request Body With Null:
                value:
                  type: 'max+'
                  period: null
                  userName: 'bogdan_10'
              Example Minimum Properties In The Possible Request Body:
                value:
                  type: 'max+'
                  userName: 'bogdan_10'
      responses:
        '201':
          description: Subscription successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '400':
          description: Bad request
        '401':
          description: Unauthorized - you must sign in
        '422':
          description: Unprocessable entity
        '500':
          description: Internal server error
  /api/subscriptions/public/{subscriptionRole}:
    get:
      summary: Get all subscriptions
      tags:
        - subscriptions
      security:
        - BearerAuth: []
      parameters:
        - name: subscriptionRole
          in: path
          required: true
          schema:
            type: string
            enum:
              - user
              - subscriber
          description: |
            User Subscription Role. Example: `user`
      responses:
        '200':
          description: List of all subscriptions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '400':
          description: Bad request
        '401':
          description: Unauthorized - you must sign in
        '404':
          description: Subscriptions are not found
        '422':
          description: Unprocessable entity
        '500':
          description: Internal server error
  /api/subscriptions/public/{subscriptionRole}/{subscriptionId}:
    get:
      summary: Get a subscription by id
      tags:
        - subscriptions
      security:
        - BearerAuth: []
      parameters:
        - name: subscriptionRole
          in: path
          required: true
          schema:
            type: string
            enum:
              - user
              - subscriber
          description: |
            User Subscription Role. Example: `subscriber`
        - name: subscriptionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: |
            Subscription ID. Example: `6dcd8f9a-3b7c-4e5f-ba9e-2f8a7f8f8f8f`
      responses:
        '200':
          description: User subscription details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '400':
          description: Bad request
        '401':
          description: Unauthorized - you must sign in
        '404':
          description: Subscriptions are not found
        '422':
          description: Unprocessable entity
        '500':
          description: Internal server error
    delete:
      summary: Delete a user subscription by id
      tags:
        - subscriptions
      security:
        - BearerAuth: []
      parameters:
        - name: subscriptionRole
          in: path
          required: true
          schema:
            type: string
            enum:
              - user
              - subscriber
          description: |
            User Subscription Role. Example: `user`
        - name: subscriptionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: |
            Subscription ID. Example: `6dcd8f9a-3b7c-4e5f-ba9e-2f8a7f8f8f8f`
      responses:
        '200':
          description: Subscription successfully deleted
        '400':
          description: Bad request
        '401':
          description: Unauthorized - you must sign in
        '404':
          description: Subscription is not found
        '422':
          description: Unprocessable entity
        '500':
          description: Internal server error
  /api/subscriptions/admin/{subscriptionId}:
    patch:
      summary: Update a subscription by id (For admins)
      tags:
        - subscriptions
      security:
        - BearerAuth: []
      parameters:
        - name: subscriptionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: |
            Subscription ID. Example: `6dcd8f9a-3b7c-4e5f-ba9e-2f8a7f8f8f8f`
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ISubscriptionUpdate'
            examples:
              Example The Only One Possible Properties In The Request Body (All Properties Are Optional):
                value:
                  type: 'max+'
                  period: '2027-01-01'
      responses:
        '200':
          description: Subscription successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '400':
          description: Bad request
        '401':
          description: Unauthorized - you must sign in as admin
        '404':
          description: Subscription is not found
        '422':
          description: Unprocessable entity
        '500':
          description: Internal server error
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        role:
          type: string
          enum:
            - admin
            - user
        email:
          type: string
        password:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        rating:
          type: integer
        posts:
          type: array
          items:
            $ref: '#/components/schemas/Post'
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/UserContact'
        subscribers:
          type: array
          items:
            $ref: '#/components/schemas/Subscription'
    IUserRegister:
      type: object
      properties:
        name:
          type: string
        role:
          type: string
          enum:
            - admin
            - user
        email:
          type: string
        password:
          type: string
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/IUserContact'
    IUserAuth:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    IUserPrivateUpdate:
      type: object
      properties:
        name:
          type: string
        role:
          type: string
          enum:
            - admin
            - user
        email:
          type: string
        password:
          type: string
        rating:
          type: integer
    IUserPublicUpdate:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        newPassword:
          type: string
        oldPassword:
          type: string
    UserContact:
      type: object
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
        value:
          type: string
        userId:
          type: string
          format: uuid
        user:
          $ref: '#/components/schemas/User'
    IUserContact:
      type: object
      properties:
        type:
          type: string
        value:
          type: string
    Post:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        access:
          type: string
          enum:
            - public
            - private
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        content:
          type: string
        rating:
          type: integer
        tags:
          type: array
          items:
            type: string
        authorId:
          type: string
          format: uuid
        author:
          $ref: '#/components/schemas/User'
    IPostCreate:
      type: object
      properties:
        title:
          type: string
        access:
          type: string
          enum:
            - public
            - private
        content:
          type: string
        tags:
          type: array
          items:
            type: string
    IPostUpdate:
      type: object
      properties:
        title:
          type: string
        access:
          type: string
          enum:
            - public
            - private
        content:
          type: string
        rating:
          type: integer
        tags:
          type: array
          items:
            type: string
    Subscription:
      type: object
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
        period:
          type: string
          format: date-time
        userName:
          type: string
        subscriberName:
          type: string
        userId:
          type: string
          format: uuid
        subscriberId:
          type: string
          format: uuid
    ISubscriptionCreate:
      type: object
      properties:
        type:
          type: string
        period:
          type: string
          format: date-time
        userName:
          type: string
    ISubscriptionUpdate:
      type: object
      properties:
        type:
          type: string
        period:
          type: string
          format: date-time
